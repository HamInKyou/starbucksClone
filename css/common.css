/* COMMON */
body {
  color: #333333;
  font-size: 16px; /*기본 폰트 사이즈 16부터 시작한다 치자*/
  font-weight: 400; /*기본 폰트 두께*/
  line-height: 1.4; /*통상적인 줄높이, 글꼴마다 다르다.*/
  font-family: "Nanum Gothic", sans-serif;
}
img {
  /*
      이미지 태그는 인라인요소, 글자를 취급하는 요소와 똑같이 취급한다.
      글자는 baseline이라는 글자 기준점의 아랫부분에 약간의 공백이 존재하는데,
      이 때문에 이미지에도 아랫부분에 약간의 공백이 생긴다.
      --> display: block으로, 이미지 요소를 블럭처리해줘서 해결한다!
      */
  display: block;
}
a {
  text-decoration: none;
}
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333333;
  border-radius: 4px;
  color: #333333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: 0.4s;
}
.btn:hover {
  background-color: #333333;
  color: #ffffff;
}
.btn.btn--reverse {
  background-color: #333333;
  color: #ffffff;
}
.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333333;
}
.btn.btn--brown {
  color: #592b18;
  border-color: #592b18;
}
.btn.btn--brown:hover {
  color: #ffffff;
  background-color: #592b18;
}
.btn.btn--gold {
  color: #d9aa8a;
  border-color: #d9aa8a;
}
.btn.btn--gold:hover {
  color: #ffffff;
  background-color: #d9aa8a;
}
.btn.btn--white {
  color: #ffffff;
  border-color: #ffffff;
}
.btn.btn--white:hover {
  color: #333333;
  background-color: #ffffff;
}

.back-to-position {
  /* 
      초기상태 - 투명
      이후 상태변화 1초동안 진행 
    */
  opacity: 0;
  transition: 1s;
}
.back-to-position.to-right {
  /* 왼쪽에서 오른쪽으로 나타나는 애니메이션 */
  transform: translateX(-150px); /* x축 왼쪽으로 150px 이동시켜준다.*/
}
.back-to-position.to-left {
  /* 오른쪽에서 왼쪽으로 나타나는 애니메이션 */
  transform: translateX(150px); /* x축 오른쪽으로 150px 이동시켜준다.*/
}
.show .back-to-position {
  /* show 라는 클래스가 붙으면 투명했던게 보이면서 원래 위치로 돌아오게 */
  opacity: 1;
  transform: translateX(0);
}
.show .back-to-position.delay-0 {
  transition-delay: 0s;
}
.show .back-to-position.delay-1 {
  transition-delay: 0.3s;
}
.show .back-to-position.delay-2 {
  transition-delay: 0.6s;
}
.show .back-to-position.delay-3 {
  transition-delay: 0.9s;
}
/* HEADER */
header {
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  /*
    fixed하면 viewport 기준으로 배치되기 때문에, 요소의 너비를 최소한으로 사용하려고 한다.
    absolute도 마찬가지, 요소의 너비를 최소한으로 사용하려고 한다. 
    명시적으로 꽉 차게 100%를 해줘야한다!
    */
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 99;
}

header > .inner {
  height: 120px;
}

header .logo {
  height: 75px; /*이미지 크기를 명시적으로  표시했다.*/
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  margin: auto 0;
}

header .sub-menu {
  display: flex;
  position: absolute;
  top: 10px;
  right: 0;
}

header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display: flex;
}

header .sub-menu ul.menu li {
  position: relative;
}
header .sub-menu ul.menu li::before {
  content: "";
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute; /*자동으로 해당 요소를 블럭으로 바꾼다.*/
  top: 0;
  bottom: 0;
  margin: auto 0;
}
header .sub-menu ul.menu li:first-child::before {
  display: none;
}

header .sub-menu ul.menu li a {
  /*
      기본적으로 a 태그는 인라인 요소라서
      마진과 패딩, 가로세로 값을 가질 수 없었다.
      따라서 display: block을 해서 이 요소를 블럭으로 바꿔주자.
    */
  display: block;
  font-size: 12px;
  padding: 11px 16px;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000000;
}

header .sub-menu .search {
  height: 34px;
  position: relative;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #cccccc;
  box-sizing: border-box; /*해당 박스의 크기를 선언한 width, height 맞춰서, 패딩, 테두리 줘도 유지하게*/
  border-radius: 5px;
  outline: none; /*포커스 되었을 때 input 태그에 기본적으로 테두리 들어가는거 없애기*/
  background-color: #ffffff;
  color: #777777;
  font-size: 12px;
  transition: width 0.4s; /* 자연스럽게 늘어나게 하기 위해 변환효과 주기*/
  cursor: pointer;
}

header .sub-menu .search input:focus {
  width: 190px;
  color: #669900;
  cursor: inherit;
}

header .sub-menu .search .material-icons {
  height: 24px; /*material-icon의 기본 사이즈는 24px*/
  position: absolute;
  top: 0;
  right: 5px;
  bottom: 0;
  margin: auto;
  transition: 0.4s;
  cursor: pointer;
}
header .sub-menu .search.focused .material-icons {
  /*포커스 되어서 search에 focused 클래스가 추가되었을 경우*/
  opacity: 0;
  cursor: inherit;
}

header .main-menu {
  display: flex;
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
}

header .main-menu .item {
}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
}
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}

header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}

header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #ffffff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  background-image: url("../images/main_menu_pattern.jpg");
  padding: 26px 0;
  height: 100px;
  font-size: 12px;
}

header .main-menu .item .item__contents .contents__texture h4 {
  color: #999999;
  font-weight: 700;
}

header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden; /*이미지 border-radius 적용하기 위해 넘쳐나는 부분 가리기*/
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}

/* FOOTER */
footer {
  background-color: #272727;
  border-top: 1px solid #333333;
}

footer .inner {
  padding: 40px 0 60px 0;
}

footer .menu {
  display: flex;
  justify-content: center;
}

footer .menu li {
  position: relative;
}

footer .menu li + li::before {
  /*
    가상요소 before의 부모요소는 :: 앞에 바로 따라오는 요소!
    부모요소는 li가 되겠지!
    */
  content: "";
  width: 3px;
  height: 3px;
  background-color: #555555;
  /* 
    가상요소 선택자는 인라인요소라서 원래는 가로세로가 안먹히지만,
    position: absolute하면 그 요소는 블럭요소로 바뀌기 때문에, 먹히게 된다!
    */
  position: absolute;
  top: 0;
  bottom: 0;
  left: -1px;
  margin: auto;
}

footer .menu li a {
  color: #cccccc;
  font-size: 12px;
  font-weight: 700;
  padding: 15px;
  /*
    a 태그는 인라인 요소라서 패딩 안먹혀서 바꿔준다!
    -> 좌우는 먹히는데 상하가 안먹힘! 
    */
  display: block;
}

footer .menu li a.green {
  color: #669900;
}

footer .btn-group {
  margin-top: 20px;
  display: flex;
  justify-content: center;
}

footer .btn-group .btn {
  font-size: 12px;
}

footer .btn-group .btn + .btn {
  margin-left: 10px;
}

footer .info {
  margin-top: 30px;
  text-align: center;
}

footer .info span {
  color: #999999;
  font-size: 12px;
}

footer .info span + span {
  margin-left: 20px;
}

footer .copyright {
  color: #999999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}

footer .logo {
  /* 
      img 요소가 display:block; margin: 0 auto; 인 경우
      width 속성이 없이도 가운데 정렬이 가능합니다.
      이미지 요소같은 경우 브라우저가 이미지 출력하는 가로 너비를 알고있다고 가정하기에!
    */
  margin: 30px auto 0;
}
